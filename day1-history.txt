lsmod | grep -e bridge -e overlay
modprobe overlay 
modprobe br_netfilter
lsmod | grep -e ntfilter -e overlay
lsmod | grep -e netfilter -e overlay
vi /etc/modules-load.d/kubernetes.conf
apt-get update
apt-get install vim curl -y
sysctl -a | ip_forward
sysctl -a | grep ip_forward
sysctl -a | grep bridge-nf-call
vi /etc/sysctl.d/99-kubernetes.conf
sysctl --system
sysctl -a | grep -e ip_forward -e bridge-nf-call
apt-get isntall containerd -y
apt-get install containerd -y
kill -9 3903; apt-get install containerd -y
mkdir -p /etc/containerd
containerd config default | tee /etc/containerd/config.toml 
vi /etc/containerd/config.toml
sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml 
vi /etc/containerd/config.toml
systemctl restart containerd.service 
systemctl status containerd.service 
swapon -s
swapoff -a
swapon -s
vi /etc/fstab 
swapon -s
apt-get install apt-transport-https -y
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
apt-get update
apt-cache madison kubeadm
apt-get install -y kubelet=1.29.7-1.1 kubeadm=1.29.7-1.1 kubectl=1.29.7-1.1
apt-mark hold kubeadm kubelet kubectl
kubeadm init --help
kubeadm init --pod-network-cidr 192.168.0.0./16 
kubeadm init --pod-network-cidr 192.168.0.0/16 
ls -la /etc/kubernetes/manifests
kubectl get nodes
export KUBECONFIG=/etc/kubernetes/admin.conf
kubectl get nodes
vi /etc/kubernetes/manifests/
etcdctl
apt-get install etcd-client
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key member list
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key member list -w table
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key endpoint health
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key snapshot save /tmp/snapshot.db
ls -lha /tmp/snapshot.db
cd /var/lib/etcd
ls -la
cd member/
ls -la
cd ..
kubectl get pods -A
mkdir $HOME/.kube
cd 
mkdir .kube
cp -rp /etc/kubernetes/admin.conf .kube/config
kubectl get pods -A
cd /var/lib/
kubectl delete deploy my-deployment
kubectl delete pod pod
kubectl delete pod pod1
kubectl get pod,deploy
ls -la
rm -rf etcd/
ls -la
cd etcd
kubectl get nodes
kubectl get pods -A
crictl ps 
cd etcd/
ls -la
crictl ps 
kubectl get nodes
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --data-dir /var/lib/etcd-restored snapshot restore /tmp/snapshot.db
cd ..
cd etcd-restored/
ls -l
vi /etc/kubernetes/manifests/etcd.yaml 
watch -n1 crictl ps 
kubectl get nodes
kubectl get pods -A
kubectl get pods 
history
history | awk '$1 > 5' | cut -c 8- >> /home/student/lfs458_Sep/day1-history.txt
kubectl get ns
kubectl get namespa
sudo apt-get install bash-completion -y
source <(kubectl completion bash)
echo "source <(kubectl completion bash)" >> $HOME/.bashrc
source $HOME/.bashrc
kubectl get namespaces 
kubectl get pods
kubectl get deployments.apps 
kubectl get pods -n kube-system
kubectl get pods -n kube-public 
kubectl get nodes
kubectl drain k8s-master 
kubectl get ds
kubectl get ds -A
kubectl drain k8s-master --ignore-daemonsets 
kubectl get pods -n kube-public 
kubectl get pods -n kube-system
kubectl get nodes
kubectl get pods -n kube-system -o wide
sudo vi /etc/apt/sources.list.d/kubernetes.list 
sudo apt-get update
sudo apt-cache madison kubeadm
apt-get install kubeadm -y --allow-change-held-packages
sudo apt-get install kubeadm -y --allow-change-held-packages
sudo kubeadm upgrade plan
sudo kubeadm upgrade apply v1.30.4
kubectl get nodes
apt-get install kubelet kubectl
sudo apt-get install kubelet kubectl
sudo systemctl daemon-reload
sudo systemctl restart kubelet
kubectl get nodes
kubectl uncordon k8s-master 
kubectl get nodes
kubectl drain worker01 --ignore-daemonsets 
kubectl uncordon worker01
kubectl get nodes
kubectl drain worker02
kubectl drain worker02 --ignore-daemonsets 
kubectl get nodes
kubectl uncordon worker02
kubectl get nodes
kubectl get pods
kubectl create deploy my-deployment --image nginx --replicas 3
kubectl run pod1 --image nginx 
kubectl get pods
sudo -i
kubectl get pods
history | awk '$1 > 5' | cut -c 8- >> day1-history.txt 
